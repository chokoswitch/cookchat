// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: crawlerapi/crawler.proto

package crawlerapi

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CrawlCookpadRecipeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID of the cookpad recipe to crawl.
	RecipeId      string `protobuf:"bytes,1,opt,name=recipe_id,json=recipeId,proto3" json:"recipe_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CrawlCookpadRecipeRequest) Reset() {
	*x = CrawlCookpadRecipeRequest{}
	mi := &file_crawlerapi_crawler_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CrawlCookpadRecipeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrawlCookpadRecipeRequest) ProtoMessage() {}

func (x *CrawlCookpadRecipeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crawlerapi_crawler_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrawlCookpadRecipeRequest.ProtoReflect.Descriptor instead.
func (*CrawlCookpadRecipeRequest) Descriptor() ([]byte, []int) {
	return file_crawlerapi_crawler_proto_rawDescGZIP(), []int{0}
}

func (x *CrawlCookpadRecipeRequest) GetRecipeId() string {
	if x != nil {
		return x.RecipeId
	}
	return ""
}

type CrawlCookpadRecipeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CrawlCookpadRecipeResponse) Reset() {
	*x = CrawlCookpadRecipeResponse{}
	mi := &file_crawlerapi_crawler_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CrawlCookpadRecipeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrawlCookpadRecipeResponse) ProtoMessage() {}

func (x *CrawlCookpadRecipeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crawlerapi_crawler_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrawlCookpadRecipeResponse.ProtoReflect.Descriptor instead.
func (*CrawlCookpadRecipeResponse) Descriptor() ([]byte, []int) {
	return file_crawlerapi_crawler_proto_rawDescGZIP(), []int{1}
}

// A request for CrawlerService.CrawlCookpadUser.
type CrawlCookpadUserRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The user ID of the cookpad user to crawl.
	UserId        string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CrawlCookpadUserRequest) Reset() {
	*x = CrawlCookpadUserRequest{}
	mi := &file_crawlerapi_crawler_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CrawlCookpadUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrawlCookpadUserRequest) ProtoMessage() {}

func (x *CrawlCookpadUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_crawlerapi_crawler_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrawlCookpadUserRequest.ProtoReflect.Descriptor instead.
func (*CrawlCookpadUserRequest) Descriptor() ([]byte, []int) {
	return file_crawlerapi_crawler_proto_rawDescGZIP(), []int{2}
}

func (x *CrawlCookpadUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// A response from CrawlerService.CrawlCookpadUser.
type CrawlCookpadUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CrawlCookpadUserResponse) Reset() {
	*x = CrawlCookpadUserResponse{}
	mi := &file_crawlerapi_crawler_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CrawlCookpadUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrawlCookpadUserResponse) ProtoMessage() {}

func (x *CrawlCookpadUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_crawlerapi_crawler_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrawlCookpadUserResponse.ProtoReflect.Descriptor instead.
func (*CrawlCookpadUserResponse) Descriptor() ([]byte, []int) {
	return file_crawlerapi_crawler_proto_rawDescGZIP(), []int{3}
}

var File_crawlerapi_crawler_proto protoreflect.FileDescriptor

const file_crawlerapi_crawler_proto_rawDesc = "" +
	"\n" +
	"\x18crawlerapi/crawler.proto\x12\n" +
	"crawlerapi\"8\n" +
	"\x19CrawlCookpadRecipeRequest\x12\x1b\n" +
	"\trecipe_id\x18\x01 \x01(\tR\brecipeId\"\x1c\n" +
	"\x1aCrawlCookpadRecipeResponse\"2\n" +
	"\x17CrawlCookpadUserRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"\x1a\n" +
	"\x18CrawlCookpadUserResponse2\xd4\x01\n" +
	"\x0eCrawlerService\x12]\n" +
	"\x10CrawlCookpadUser\x12#.crawlerapi.CrawlCookpadUserRequest\x1a$.crawlerapi.CrawlCookpadUserResponse\x12c\n" +
	"\x12CrawlCookpadRecipe\x12%.crawlerapi.CrawlCookpadRecipeRequest\x1a&.crawlerapi.CrawlCookpadRecipeResponseB;Z9github.com/curioswitch/cookchat/crawler/api/go;crawlerapib\x06proto3"

var (
	file_crawlerapi_crawler_proto_rawDescOnce sync.Once
	file_crawlerapi_crawler_proto_rawDescData []byte
)

func file_crawlerapi_crawler_proto_rawDescGZIP() []byte {
	file_crawlerapi_crawler_proto_rawDescOnce.Do(func() {
		file_crawlerapi_crawler_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_crawlerapi_crawler_proto_rawDesc), len(file_crawlerapi_crawler_proto_rawDesc)))
	})
	return file_crawlerapi_crawler_proto_rawDescData
}

var file_crawlerapi_crawler_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_crawlerapi_crawler_proto_goTypes = []any{
	(*CrawlCookpadRecipeRequest)(nil),  // 0: crawlerapi.CrawlCookpadRecipeRequest
	(*CrawlCookpadRecipeResponse)(nil), // 1: crawlerapi.CrawlCookpadRecipeResponse
	(*CrawlCookpadUserRequest)(nil),    // 2: crawlerapi.CrawlCookpadUserRequest
	(*CrawlCookpadUserResponse)(nil),   // 3: crawlerapi.CrawlCookpadUserResponse
}
var file_crawlerapi_crawler_proto_depIdxs = []int32{
	2, // 0: crawlerapi.CrawlerService.CrawlCookpadUser:input_type -> crawlerapi.CrawlCookpadUserRequest
	0, // 1: crawlerapi.CrawlerService.CrawlCookpadRecipe:input_type -> crawlerapi.CrawlCookpadRecipeRequest
	3, // 2: crawlerapi.CrawlerService.CrawlCookpadUser:output_type -> crawlerapi.CrawlCookpadUserResponse
	1, // 3: crawlerapi.CrawlerService.CrawlCookpadRecipe:output_type -> crawlerapi.CrawlCookpadRecipeResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_crawlerapi_crawler_proto_init() }
func file_crawlerapi_crawler_proto_init() {
	if File_crawlerapi_crawler_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_crawlerapi_crawler_proto_rawDesc), len(file_crawlerapi_crawler_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_crawlerapi_crawler_proto_goTypes,
		DependencyIndexes: file_crawlerapi_crawler_proto_depIdxs,
		MessageInfos:      file_crawlerapi_crawler_proto_msgTypes,
	}.Build()
	File_crawlerapi_crawler_proto = out.File
	file_crawlerapi_crawler_proto_goTypes = nil
	file_crawlerapi_crawler_proto_depIdxs = nil
}
